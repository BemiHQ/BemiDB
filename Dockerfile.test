ARG PLATFORM=linux/arm64

FROM --platform=$PLATFORM debian:12-slim AS base

RUN apt-get update \
  && apt-get install -y --no-install-recommends \
  curl ca-certificates \
  postgresql-client \
  gcc g++ libc6-dev \
  && rm -rf /var/lib/apt/lists/*

RUN adduser --disabled-login app

WORKDIR /app

# Install Java and Trino

ENV JAVA_HOME /opt/jdk-24
ENV PATH $JAVA_HOME/bin:$PATH

RUN \
  ARCH=$(dpkg --print-architecture) && case "$ARCH" in \
    "amd64") \
      JDK_URL="https://download.oracle.com/java/24/archive/jdk-24.0.1_linux-x64_bin.tar.gz"; \
      ;; \
    "arm64") \
      JDK_URL="https://download.oracle.com/java/24/archive/jdk-24.0.1_linux-aarch64_bin.tar.gz"; \
      ;; \
    *) \
      echo "Unsupported architecture: $ARCH"; \
      exit 1; \
      ;; \
  esac \
  && curl -L "$JDK_URL" -o jdk.tar.gz \
  && tar -xzf jdk.tar.gz \
  && rm jdk.tar.gz \
  && mkdir -p /opt \
  && mv jdk-24.0.1 /opt/jdk-24 \
  \
  && curl -L https://repo1.maven.org/maven2/io/trino/trino-server/476/trino-server-476.tar.gz -o trino-server-476.tar.gz \
  && tar -xzf trino-server-476.tar.gz \
  && rm trino-server-476.tar.gz \
  && mv trino-server-476 /app/trino \
  && mkdir -p /data/trino \
  && chown -R "app:app" /app/trino /data/trino

# Set up Trino

HEALTHCHECK --interval=10s --timeout=5s --start-period=10s \
  CMD /app/trino/bin/health-check.sh

COPY --chown=app:app docker/trino/etc /etc/trino
COPY --chown=app:app docker/trino/bin /app/trino/bin
COPY --chown=app:app docker/trino/configure.sql /app/trino/

# Set up syncers and server ########################################################################

FROM base AS test

# Install Go, MinIO, and PostgreSQL

ENV GOROOT /usr/local/go
ENV GOPATH /go
ENV PATH $GOPATH/bin:$GOROOT/bin:$PATH

RUN \
  ARCH=$(dpkg --print-architecture) \
  \
  && curl -L "https://go.dev/dl/go1.24.4.linux-$ARCH.tar.gz" -o go.tar.gz \
  && tar -C /usr/local -xzf go.tar.gz \
  && rm go.tar.gz \
  && mkdir -p "$GOPATH/src" "$GOPATH/bin" \
  && chmod -R 777 "$GOPATH" \
  \
  && curl -L "https://dl.min.io/server/minio/release/linux-$ARCH/minio" -o /usr/local/bin/minio \
  && chmod +x /usr/local/bin/minio \
  && mkdir -p /data/minio \
  && chown -R "app:app" /data/minio \
  && curl -L "https://dl.min.io/client/mc/release/linux-$ARCH/mc" -o /usr/local/bin/mc \
  && chmod +x /usr/local/bin/mc \
  \
  && apt-get update \
  && apt-get install -y --no-install-recommends gnupg \
  && curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg \
  && echo "deb http://apt.postgresql.org/pub/repos/apt bookworm-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
  && apt-get update \
  && apt-get install -y --no-install-recommends postgresql-16 \
  && mkdir -p /var/lib/postgresql/data \
  && chown -R app:app /var/lib/postgresql/data \
  && chmod 700 /var/lib/postgresql/data \
  && mkdir -p /var/run/postgresql \
  && chown -R app:app /var/run/postgresql

# Prepare syncers and server

COPY --chown=app:app src/syncer-common/go.mod src/syncer-common/go.sum /app/src/syncer-common/
RUN cd /app/src/syncer-common && go mod download

COPY --chown=app:app src/syncer-postgres/go.mod src/syncer-postgres/go.sum /app/src/syncer-postgres/
RUN cd /app/src/syncer-postgres && go mod download

COPY --chown=app:app src/server/go.mod src/server/go.sum /app/src/server/
RUN cd /app/src/server && go mod download

COPY --chown=app:app src/syncer-common /app/src/syncer-common
COPY --chown=app:app src/syncer-postgres /app/src/syncer-postgres
COPY --chown=app:app src/server /app/src/server

COPY --chown=app:app docker/bin docker/bin-test /app/bin/

USER app

ENTRYPOINT ["/app/bin/test.sh"]
